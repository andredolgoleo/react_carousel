{"version":3,"sources":["components/Carousel.tsx","components/Bubble.tsx","App.tsx","index.tsx"],"names":["newImages","Carousel","props","state","leftSide","stopPrevButton","stopNextButton","myRef","handleNextButton","step","itemWidth","infinite","frameSize","shift","carouselWidth","length","setState","prevState","images","handlePrevButton","checkPosition","isInfinite","React","createRef","this","animationDuration","current","click","ref","id","type","onClick","className","style","width","left","transition","map","image","index","src","alt","disabled","PureComponent","Bubble","arr","Array","fill","_undefined","i","Component","App","handleChange","event","target","name","value","min","max","htmlFor","defaultValue","onInput","checked","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7433741e.chunk.js","sourcesContent":["import React, { RefObject } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  leftSide: number,\n  stopPrevButton: boolean,\n  stopNextButton: boolean,\n};\n\nlet newImages: string[] = [];\n\nexport class Carousel extends React.PureComponent<Props, State> {\n  state: State = {\n    leftSide: 0,\n    stopPrevButton: true,\n    stopNextButton: false,\n  };\n\n  public myRef: RefObject<HTMLInputElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  handleNextButton = () => {\n    const {\n      step, itemWidth, infinite, frameSize,\n    } = this.props;\n    const { leftSide } = this.state;\n    const shift = itemWidth * step;\n    const carouselWidth = itemWidth * newImages.length;\n\n    this.setState((prevState) => (\n      { leftSide: prevState.leftSide - shift }));\n\n    if (leftSide - shift < 0) {\n      this.setState({ stopPrevButton: false });\n    }\n\n    if (!infinite\n      && ((leftSide - shift - frameSize * itemWidth) <= -carouselWidth)) {\n      this.setState({ stopNextButton: true });\n      this.setState({ leftSide: frameSize * itemWidth - carouselWidth });\n    }\n\n    if (infinite) {\n      newImages = [...newImages, ...this.props.images];\n    }\n  };\n\n  handlePrevButton = () => {\n    const {\n      step,\n      itemWidth,\n    } = this.props;\n\n    const { leftSide } = this.state;\n    const shift = itemWidth * step;\n    const carouselWidth = itemWidth * newImages.length;\n\n    if (leftSide + shift * 2 > -carouselWidth) {\n      this.setState({ stopNextButton: false });\n    }\n\n    if ((leftSide + shift) >= 0) {\n      this.setState({ stopPrevButton: true });\n      this.setState({ leftSide: 0 });\n    }\n\n    if ((leftSide + shift) < 0) {\n      this.setState((prevState) => (\n        { leftSide: prevState.leftSide + shift }));\n    }\n  };\n\n  checkPosition = () => {\n    if (this.state.leftSide < -this.props.itemWidth * newImages.length) {\n      this.setState({ leftSide: 0 });\n      this.setState({ stopPrevButton: true });\n      this.setState({ stopNextButton: false });\n    }\n  };\n\n  isInfinite = () => {\n    this.setState({\n      stopNextButton: false,\n      stopPrevButton: false,\n    });\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const {\n      leftSide,\n      stopPrevButton,\n      stopNextButton,\n    } = this.state;\n\n    if (!infinite) {\n      newImages = [...this.props.images];\n      this.checkPosition();\n    }\n\n    if (infinite) {\n      if (this.myRef.current !== null) {\n        this.myRef.current.click();\n      }\n    }\n\n    return (\n      <>\n        <input\n          ref={this.myRef}\n          id=\"inp\"\n          type=\"checkbox\"\n          onClick={this.isInfinite}\n        />\n        <h1>{`Carousel with ${this.props.images.length} images`}</h1>\n\n        <div className=\"Carousel\">\n          <div className=\"wrapper\" style={{ width: `${itemWidth * frameSize}px` }}>\n            <ul\n              className=\"Carousel__list\"\n              style={{\n                left: `${leftSide}px`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              {newImages.map((image, index) => (\n                <li key={image} className=\"Carousel__item\">\n                  <img\n                    className=\"Carousel__image\"\n                    src={image}\n                    alt={`${index + 1}`}\n                    style={{\n                      width: `${itemWidth}px`,\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"Carousel__buttons\">\n            <button\n              disabled={stopPrevButton}\n              className=\"Carousel__button\"\n              type=\"button\"\n              onClick={this.handlePrevButton}\n            >\n              Prev\n            </button>\n            <button\n              className=\"Carousel__button\"\n              disabled={stopNextButton}\n              data-cy=\"next\"\n              type=\"button\"\n              onClick={this.handleNextButton}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\n\nexport class Bubble extends Component<{}, {}> {\n  state = {\n    arr: new Array(20).fill(0),\n  };\n\n  render() {\n    return (\n      <>\n        { /* eslint-disable-next-line */ }\n        {this.state.arr.map((_undefined, i) => <div key={i} className=\"bubble\" />)}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Bubble } from './components/Bubble';\n\ntype State = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, min, max,\n    } = event.target;\n\n    if ((+value >= +min && +value <= +max) || (name === 'infinite')) {\n      switch (name) {\n        case 'itemWidth':\n          this.setState({ itemWidth: +value });\n          break;\n\n        case 'frameSize':\n          this.setState({ frameSize: +value });\n          break;\n\n        case 'step':\n          this.setState({ step: +value });\n          break;\n\n        case 'animationDuration':\n          this.setState({ animationDuration: +value });\n          break;\n\n        case 'infinite':\n          this.setState(state => ({ infinite: !state.infinite }));\n          break;\n\n        default:\n          return 0;\n      }\n    }\n\n    return this.state;\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form className=\"Carousel__setting\">\n          <label htmlFor=\"step\">\n            Step:\n            <input\n              min={1}\n              max={3}\n              defaultValue={step}\n              name=\"step\"\n              type=\"number\"\n              onInput={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"frameSize\">\n            Frame size:\n            <input\n              min={1}\n              max={10}\n              name=\"frameSize\"\n              type=\"number\"\n              defaultValue={frameSize}\n              onInput={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"itemWidth\">\n            Item width:\n            <input\n              min={30}\n              max={300}\n              step={10}\n              defaultValue={130}\n              name=\"itemWidth\"\n              type=\"number\"\n              onInput={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\">\n            Animation Duration:\n            <input\n              min={500}\n              max={2000}\n              defaultValue={animationDuration}\n              name=\"animationDuration\"\n              type=\"number\"\n              onInput={this.handleChange}\n            />\n\n          </label>\n          <label htmlFor=\"infinite\">\n            infinite:\n            <input\n              name=\"infinite\"\n              type=\"checkbox\"\n              className=\"Carousel__checkbox\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Bubble />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}